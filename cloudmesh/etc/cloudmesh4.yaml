cloudmesh:
  profile:
    firstname: TBD
    lastname: TBD
    email: TBD@sample.edu
    user: TBD
    github: TBD
    publickey: ~/.ssh/id_rsa.pub
  default:
    group: cloudmesh
    experiment: base
    cloud: azure
    cluster: clustera
  storage:
    box:
      cm:
        heading: Box
        host: box.com
        label: Box
        kind: box
        version: TBD
      default:
        directory: TBD
      credentials:
        name: TBD
    gdrive:
      cm:
        heading: GDrive
        host: dgrive.google.com
        label: GDrive
        kind: gdrive
        version: TBD
      default:
        directory: TBD
      credentials:
        client_id: TBD
        prokect_id: TBD
        auth_uri: "https://accounts.google.com/o/oauth2/auth"
        token_uri: TBD
        client_secret: TBD
        auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
        redirect_uris:
          - "urn:ietf:wg:oauth:2.0:oob"
          - "http://localhost"
  cloud:
    azure:
      cm:
        active: False
        heading: AWS
        host: azure.mocrosoft.com
        label: Azure
        kind: azure
        version: TBD
      default:
        image: 'Canonical:UbuntuServer:16.04-LTS:latest'
        size: 'Basic_A0'
        resource_group: 'cloudmesh'
        storage_account: 'cmdrive'
        network: 'cmnetwork'
      credentials:
        AZURE_TENANT_ID: 'xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
        AZURE_SUBSCRIPTION_ID: 'xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
        AZURE_APPLICATION_ID: 'xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
        AZURE_SECRET_KEY: TBD
        AZURE_REGION: 'northcentralus'
    aws:
      cm:
        active: False
        heading: AWS
        host: aws.amazon.com
        label: aws
        kind: aws
        version: TBD
      default:
        image: 'ami-0f65671a86f061fcd'
        size: 't2.micro'
      credentials:
        region: 'us-west-2'
        EC2_SECURITY_GROUP: 'group1'
        EC2_ACCESS_ID: TBD
        EC2_SECRET_KEY: TBD
        EC2_PRIVATE_KEY_FILE_PATH: '~/.cloudmesh/aws_cert.pem'
        EC2_PRIVATE_KEY_FILE_NAME: 'aws_cert'
    chameleon:
      cm:
        active: True
        heading: Chameleon
        host: chameleoncloud.org
        label: chameleon
        kind: vm
        version: liberty
      credentials:
        OS_AUTH_URL: https://vm.tacc.chameleoncloud.org:5000/v2.0/tokens
        OS_USERNAME: TBD
        OS_PASSWORD: TBD
        OS_TENANT_NAME: CH-819337
        OS_TENANT_ID: CH-819337
        OS_PROJECT_NAME: CH-819337
        OS_PROJECT_DOMAIN_ID: default
        OS_USER_DOMAIN_ID: default
        OS_VERSION: liberty
        OS_REGION_NAME: RegionOne
        OS_KEY_PATH: TBD
      default:
        flavor: m1.small
        image: CC-Ubuntu16.04
        username: cc
    jetstream:
      cm:
        active: True
        heading: Jetstream
        host: http://jetstream-cloud.org/
        label: jetstream
        kind: vm
        version: kilo
      credentials:
        OS_PROJECT_DOMAIN_NAME: tacc
        OS_USER_DOMAIN_NAME: tacc
        OS_PROJECT_ID: 7bfa792867a141e6855fdaaa2a960a4e
        OS_PROJECT_NAME: TG-CIE170003
        OS_TENANT_NAME: TG-CIE170003
        OS_USERNAME: tg455498
        OS_PASSWORD: Sol5uMvOxMc1
        OS_AUTH_URL: https://tacc.jetstream-cloud.org:5000
        OS_IDENTITY_API_VERSION: 3
        OS_INTERFACE: public
        OS_REGION_NAME: RegionOne
      default:
        flavor: m1.small
        image: Ubuntu-Server-14.04-LTS
    cybera-e:
      cm:
        active: False
        heading: Cybera Edmonton OpenStack
        host: cybera
        label: kilo
        kind: vm
        version: kilo
      kind: vm
      credentials:
        OS_AUTH_URL: https://vm.tacc.chameleoncloud.org:5000/v3
        OS_TENANT_ID: TBD
        OS_TENANT_NAME: TBD
        OS_PROJECT_NAME: TBD
        OS_USERNAME: TBD
        OS_PASSWORD: TBD
        OS_REGION_NAME: Edmonton
      default:
        flavor: m1.small
        image: Ubuntu 14.04
    vagrant:
      credentials:
        local: True
        hostname: localhost
      cm:
        active: True
        heading: Vagrant
        host: TBD
        label: TBD
        kind: TBD
        version: TBD
      default:
        path: ~/.cloudmesh/vagrant
        image: ubuntu/bionic/64
        key: ~/.ssh/id_rsa.pub
    vagrant_remote:
      cm:
        active: False
        heading: Vagrant
        host: TBD
        label: TBD
        kind: TBD
        version: TBD
      credentials:
        local: False
        hostname: 127.0.0.1
        username: albert
        key: ~/.ssh/id_rsa.pub
      default:
        path: '~/.cloudmesh/vagrant'
  data:
    default:
      db: local
      service: local
    db:
      local:
        CMDATA_DB_FOLDER: '~/cloudmesh/cm4/test/data/db'
    service:
      local:
        CMDATA_STORAGE_FOLDER: '~/cloudmesh/cm4/test/data/storage'
      azure:
        container: 'cmdata'
        credentials:
          AZURE_STORAGE_ACCOUNT: ''
          AZURE_STORAGE_KEY: ''
      google:
        credentials:
          GOOGLE_STORAGE_KEY: ''
          GOOGLE_STORAGE_SECRET: ''
    mongo:
      MONGO_AUTOINSTALL: True
      MONGO_BREWINSTALL: False
      LOCAL: ~/local
      MONGO_HOME: ~/local/mongo
      MONGO_PATH: ~/.cloudmesh/mongodb
      MONGO_LOG: ~/.cloudmesh/mongodb/log
      MONGO_DBNAME: 'cloudmesh'
      MONGO_HOST: '127.0.0.1'
      MONGO_PORT: '27017':
      MONGO_USERNAME: 'xiaoyue'
      MONGO_PASSWORD: 'xiaoyue'
      MONGO_DOWNLOAD:
        darwin: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.4.tgz
        linux: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.4.tgz
        win32: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.4-signed.msi
        redhat: https://repo.mongodb.org/yum/redhat/7/mongodb-org/4.0/x86_64/RPMS/mongodb-org-server-4.0.4-1.el7.x86_64.rpm
  cluster:
    bigred2:
      active: False
      name: bigred2
      label: bigred
      address: bigred2.iu.edu
      credentials:
        username: TBD
        pulickey: ~/.ssh/id_rsa.pub
    karst:
      active: False
      credentials:
        username: TBD
        pulickey: ~/.ssh/id_rsa.pub
    slurm-taito:
      active: False
      name: taito
      credentials:
        sshconfigpath: ~/.ssh/config
    clustera:
      active: False
      computer_a:
        name: computer_a
        label: one
        address: localhost
        credentials:
          username: TBD
          pulickey: ~/.ssh/id_rsa.pub
      computer_b:
        name: computer_b
        label: two
        address: localhost
        credentials:
          username: TBD
          pulickey: ~/.ssh/id_rsa.pub
    vcluster_test1:
      active: False
      computer_a:
        name: machine1
        label: one
        address: localhost
        credentials:
          sshconfigpath: ~/.ssh/config
      computer_b:
        name: computer_a
        label: one
        address: localhost
        credentials:
          username: TBD
          pulickey: ~/.ssh/id_rsa.pub
    vcluster_test2:
      active: False
      c2:
        name: machine2
        label: two
        address: localhost
        credentials:
          sshconfigpath: ~/.ssh/config
